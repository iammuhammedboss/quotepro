<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>WhatsApp Integration - Quotation #<%= quotation.quotation_no %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@400;600&display=swap" rel="stylesheet">
  <link rel="icon" type="image/png" href="/images/quotepro-logo.png">
  
  <style>
    body { font-family: 'Outfit', sans-serif; }
    
    .whatsapp-container {
      display: grid;
      grid-template-columns: 350px 1fr;
      height: calc(100vh - 80px);
      gap: 0;
    }
    
    .control-panel {
      background: #f8f9fa;
      border-right: 2px solid #e5e7eb;
      padding: 20px;
      overflow-y: auto;
    }
    
    .whatsapp-frame {
      position: relative;
      background: white;
    }
    
    .whatsapp-iframe {
      width: 100%;
      height: 100%;
      border: none;
    }
    
    .action-card {
      background: white;
      border-radius: 12px;
      padding: 20px;
      margin-bottom: 16px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      border-left: 4px solid #25d366;
    }
    
    .action-card h3 {
      color: #25d366;
      font-weight: 600;
      margin-bottom: 12px;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .step-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    
    .step-list li {
      padding: 8px 0;
      border-bottom: 1px solid #f0f0f0;
      font-size: 14px;
      display: flex;
      align-items: flex-start;
      gap: 8px;
    }
    
    .step-list li:last-child {
      border-bottom: none;
    }
    
    .step-number {
      background: #25d366;
      color: white;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 12px;
      font-weight: bold;
      flex-shrink: 0;
      margin-top: 2px;
    }
    
    .export-btn {
      width: 100%;
      padding: 12px;
      border: none;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      margin-bottom: 8px;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
      text-decoration: none;
    }
    
    .export-btn.pdf {
      background: #dc2626;
      color: white;
    }
    
    .export-btn.image {
      background: #7c3aed;
      color: white;
    }
    
    .export-btn:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    }
    
    .caption-box {
      background: #f0f7ff;
      border: 2px dashed #3b82f6;
      border-radius: 8px;
      padding: 12px;
      font-family: 'Courier New', monospace;
      font-size: 13px;
      line-height: 1.4;
      white-space: pre-wrap;
      max-height: 200px;
      overflow-y: auto;
      margin-bottom: 12px;
    }
    
    .copy-btn {
      background: #3b82f6;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 6px;
      font-size: 12px;
      cursor: pointer;
      transition: background 0.2s;
    }
    
    .copy-btn:hover {
      background: #2563eb;
    }
    
    .copy-btn.copied {
      background: #10b981;
    }
    
    .loading-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(255, 255, 255, 0.9);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 10;
    }
    
    .loading-spinner {
      width: 40px;
      height: 40px;
      border: 4px solid #f3f4f6;
      border-top: 4px solid #25d366;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-bottom: 16px;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    .status-indicator {
      position: absolute;
      top: 10px;
      right: 10px;
      background: #10b981;
      color: white;
      padding: 4px 12px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 600;
      z-index: 5;
    }
    
    .status-indicator.loading {
      background: #f59e0b;
    }
    
    .status-indicator.error {
      background: #ef4444;
    }
    
    @media (max-width: 768px) {
      .whatsapp-container {
        grid-template-columns: 1fr;
        grid-template-rows: auto 1fr;
      }
      
      .control-panel {
        height: auto;
        max-height: 300px;
      }
    }
    
    .document-ready {
      display: none;
      background: #10b981;
      color: white;
      padding: 12px;
      border-radius: 8px;
      margin-bottom: 16px;
      text-align: center;
      font-weight: 600;
    }
    
    .document-ready.show {
      display: block;
    }
    
    .quick-paste-area {
      background: #fef3c7;
      border: 2px dashed #f59e0b;
      border-radius: 8px;
      padding: 16px;
      text-align: center;
      margin-bottom: 16px;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    
    .quick-paste-area:hover {
      background: #fef08a;
      border-color: #d97706;
    }
    
    .quick-paste-area.active {
      background: #10b981;
      border-color: #059669;
      color: white;
    }
  </style>
</head>
<body class="bg-gray-100">

<!-- Header -->
<div class="bg-red-700 text-white px-6 py-4 flex justify-between items-center">
  <div class="flex items-center gap-4">
    <img src="/images/quotepro-logo-white.png" class="h-10" />
    <div>
      <h1 class="text-xl font-bold">QuotePro ‚Äì WhatsApp Integration</h1>
      <p class="text-sm">by Muhammed Boss</p>
    </div>
  </div>
  <div class="flex gap-3">
    <a href="/quotations/export/<%= quotation.id %>" class="bg-white text-red-700 px-3 py-2 rounded hover:bg-gray-200 text-sm font-medium">
      ‚öôÔ∏è Export Settings
    </a>
    <a href="/quotations/view/<%= quotation.id %>" class="bg-white text-red-700 px-3 py-2 rounded hover:bg-gray-200 text-sm font-medium">
      üëÅÔ∏è View Quotation
    </a>
  </div>
</div>

<!-- Main Content -->
<div class="whatsapp-container">
  
  <!-- Control Panel -->
  <div class="control-panel">
    
    <!-- Quotation Info -->
    <div class="action-card">
      <h3>üìã Quotation Details</h3>
      <div class="text-sm space-y-2">
        <div><strong>Quote:</strong> <%= quotation.quotation_no %></div>
        <div><strong>Client:</strong> <%= quotation.client_name %></div>
        <div><strong>Amount:</strong> OMR <%= parseFloat(quotation.grand_total).toFixed(3) %></div>
        <div><strong>Phone:</strong> <%= quotation.client_phone || 'N/A' %></div>
      </div>
    </div>
    
    <!-- Document Status -->
    <div id="documentStatus" class="document-ready">
      ‚úÖ Document Ready for WhatsApp!
    </div>
    
    <!-- Quick Export -->
    <div class="action-card">
      <h3>üì§ Quick Export</h3>
      <button class="export-btn pdf" onclick="exportForWhatsApp('pdf')">
        üìÑ Generate PDF
      </button>
      <button class="export-btn image" onclick="exportForWhatsApp('image')">
        üñºÔ∏è Generate Image
      </button>
    </div>
    
    <!-- Quick Paste -->
    <div class="action-card">
      <h3>‚ö° Quick Actions</h3>
      <div class="quick-paste-area" onclick="pasteToWhatsApp()">
        <div class="text-2xl mb-2">üìé</div>
        <div class="font-semibold">Paste Document</div>
        <div class="text-xs">Click after selecting chat</div>
      </div>
      <button class="copy-btn w-full" onclick="copyCaption()">
        üìù Copy Caption
      </button>
    </div>
    
    <!-- Instructions -->
    <div class="action-card">
      <h3>üì± How to Use</h3>
      <ol class="step-list">
        <li>
          <span class="step-number">1</span>
          <span>Open WhatsApp Web in the frame ‚Üí</span>
        </li>
        <li>
          <span class="step-number">2</span>
          <span>Select your client's chat</span>
        </li>
        <li>
          <span class="step-number">3</span>
          <span>Click "Generate PDF" or "Generate Image"</span>
        </li>
        <li>
          <span class="step-number">4</span>
          <span>Click "Paste Document" when ready</span>
        </li>
        <li>
          <span class="step-number">5</span>
          <span>Click "Copy Caption" for message text</span>
        </li>
        <li>
          <span class="step-number">6</span>
          <span>Paste caption and send! üöÄ</span>
        </li>
      </ol>
    </div>
    
    <!-- Smart Caption -->
    <div class="action-card">
      <h3>üí¨ Smart Caption</h3>
      <div class="caption-box" id="captionText"><%= whatsappCaption %></div>
      <button class="copy-btn" onclick="copyCaption()">üìã Copy Caption</button>
    </div>
    
  </div>
  
  <!-- WhatsApp Frame -->
  <div class="whatsapp-frame">
    <div id="statusIndicator" class="status-indicator loading">Loading WhatsApp...</div>
    
    <div id="loadingOverlay" class="loading-overlay">
      <div class="loading-spinner"></div>
      <p class="text-gray-600 font-medium">Loading WhatsApp Web...</p>
      <p class="text-sm text-gray-500 mt-2">This may take a few moments</p>
    </div>
    
    <iframe 
      id="whatsappIframe" 
      class="whatsapp-iframe"
      src="https://web.whatsapp.com"
      title="WhatsApp Web">
    </iframe>
  </div>
  
</div>

<script>
// üî• WhatsApp Integration JavaScript

let exportedDocument = null;
let exportedFileName = null;

// Initialize
document.addEventListener('DOMContentLoaded', function() {
  console.log('üöÄ WhatsApp integration initialized');
  initializeWhatsAppFrame();
});

// Initialize WhatsApp frame
function initializeWhatsAppFrame() {
  const iframe = document.getElementById('whatsappIframe');
  const loadingOverlay = document.getElementById('loadingOverlay');
  const statusIndicator = document.getElementById('statusIndicator');
  
  iframe.addEventListener('load', function() {
    setTimeout(() => {
      loadingOverlay.style.display = 'none';
      statusIndicator.textContent = 'WhatsApp Ready';
      statusIndicator.className = 'status-indicator';
      console.log('‚úÖ WhatsApp Web loaded');
    }, 3000); // Give WhatsApp time to fully load
  });
  
  iframe.addEventListener('error', function() {
    statusIndicator.textContent = 'Connection Error';
    statusIndicator.className = 'status-indicator error';
    console.error('‚ùå WhatsApp Web failed to load');
  });
}

// Export document for WhatsApp
async function exportForWhatsApp(format) {
  const button = event.target;
  const originalText = button.textContent;
  
  try {
    button.disabled = true;
    button.textContent = `Generating ${format.toUpperCase()}...`;
    button.style.opacity = '0.7';
    
    // Optimized settings for WhatsApp
    const whatsappSettings = {
      customHeader: 'QUOTATION FOR WATERPROOFING',
      paperSize: 'A4',
      optimizeImage: true,
      imageFormat: format === 'image' ? 'jpg' : format,
      imageQuality: 85,
      bodyFontSize: '14px',
      tableFontSize: '12px',
      qrSize: '100'
    };
    
    const response = await fetch(`/quotations/export/<%= quotation.id %>/${format}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(whatsappSettings)
    });
    
    if (response.ok) {
      const blob = await response.blob();
      exportedDocument = blob;
      
      // Generate filename
      const contentDisposition = response.headers.get('Content-Disposition');
      if (contentDisposition) {
        const matches = /filename="([^"]*)"/.exec(contentDisposition);
        exportedFileName = matches ? matches[1] : `quotation-<%= quotation.quotation_no %>.${format}`;
      } else {
        exportedFileName = `quotation-<%= quotation.quotation_no %>.${format}`;
      }
      
      // Show success
      document.getElementById('documentStatus').classList.add('show');
      showMessage(`${format.toUpperCase()} ready for WhatsApp! üéâ`, 'success');
      
      // Auto-paste if possible
      setTimeout(() => {
        pasteToWhatsApp();
      }, 1000);
      
    } else {
      throw new Error(`${format} generation failed`);
    }
    
  } catch (error) {
    console.error(`Export error:`, error);
    showMessage(`Failed to generate ${format.toUpperCase()}. Please try again.`, 'error');
  } finally {
    button.disabled = false;
    button.textContent = originalText;
    button.style.opacity = '1';
  }
}

// Paste document to WhatsApp
async function pasteToWhatsApp() {
  if (!exportedDocument) {
    showMessage('Please generate a document first! üìÑ', 'warning');
    return;
  }
  
  try {
    // Create a temporary download link
    const url = window.URL.createObjectURL(exportedDocument);
    const a = document.createElement('a');
    a.href = url;
    a.download = exportedFileName;
    
    // Trigger download
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    
    // Clean up
    window.URL.revokeObjectURL(url);
    
    // Update UI
    const pasteArea = document.querySelector('.quick-paste-area');
    pasteArea.classList.add('active');
    pasteArea.innerHTML = `
      <div class="text-2xl mb-2">‚úÖ</div>
      <div class="font-semibold">Document Downloaded!</div>
      <div class="text-xs">Now attach it in WhatsApp</div>
    `;
    
    showMessage('Document downloaded! Now attach it in WhatsApp üìé', 'success');
    
    // Reset after 3 seconds
    setTimeout(() => {
      pasteArea.classList.remove('active');
      pasteArea.innerHTML = `
        <div class="text-2xl mb-2">üìé</div>
        <div class="font-semibold">Paste Document</div>
        <div class="text-xs">Click after selecting chat</div>
      `;
    }, 3000);
    
  } catch (error) {
    console.error('Paste error:', error);
    showMessage('Failed to prepare document. Please try again.', 'error');
  }
}

// Copy caption to clipboard
async function copyCaption() {
  const captionText = document.getElementById('captionText').textContent;
  const button = event.target;
  const originalText = button.textContent;
  
  try {
    await navigator.clipboard.writeText(captionText);
    
    button.textContent = '‚úÖ Copied!';
    button.classList.add('copied');
    
    showMessage('Caption copied to clipboard! üìã', 'success');
    
    setTimeout(() => {
      button.textContent = originalText;
      button.classList.remove('copied');
    }, 2000);
    
  } catch (error) {
    console.error('Copy error:', error);
    
    // Fallback for older browsers
    const textArea = document.createElement('textarea');
    textArea.value = captionText;
    document.body.appendChild(textArea);
    textArea.select();
    document.execCommand('copy');
    document.body.removeChild(textArea);
    
    showMessage('Caption copied! üìã', 'success');
  }
}

// Show message function
function showMessage(message, type = 'success') {
  // Remove existing messages
  const existingMessages = document.querySelectorAll('.toast-message');
  existingMessages.forEach(msg => msg.remove());
  
  const messageDiv = document.createElement('div');
  messageDiv.className = `toast-message fixed top-4 right-4 px-6 py-3 rounded-lg text-white font-medium z-50 ${
    type === 'success' ? 'bg-green-500' : 
    type === 'warning' ? 'bg-yellow-500' : 
    type === 'error' ? 'bg-red-500' : 'bg-blue-500'
  }`;
  messageDiv.textContent = message;
  
  document.body.appendChild(messageDiv);
  
  // Auto-remove after 4 seconds
  setTimeout(() => {
    messageDiv.remove();
  }, 4000);
}

// Handle iframe messaging (for advanced integration)
window.addEventListener('message', function(event) {
  // Only accept messages from WhatsApp
  if (event.origin !== 'https://web.whatsapp.com') return;
  
  console.log('üì± WhatsApp message received:', event.data);
  
  // Handle different message types from WhatsApp
  if (event.data.type === 'CHAT_SELECTED') {
    console.log('‚úÖ Chat selected in WhatsApp');
    showMessage('Chat selected! Ready to send document üí¨', 'success');
  }
});

// Keyboard shortcuts
document.addEventListener('keydown', function(event) {
  // Ctrl/Cmd + E = Export PDF
  if ((event.ctrlKey || event.metaKey) && event.key === 'e') {
    event.preventDefault();
    exportForWhatsApp('pdf');
  }
  
  // Ctrl/Cmd + I = Export Image
  if ((event.ctrlKey || event.metaKey) && event.key === 'i') {
    event.preventDefault();
    exportForWhatsApp('image');
  }
  
  // Ctrl/Cmd + P = Paste Document
  if ((event.ctrlKey || event.metaKey) && event.key === 'p') {
    event.preventDefault();
    pasteToWhatsApp();
  }
  
  // Ctrl/Cmd + C = Copy Caption
  if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'C') {
    event.preventDefault();
    copyCaption();
  }
});

console.log('üí° Keyboard shortcuts:');
console.log('   Ctrl+E = Export PDF');
console.log('   Ctrl+I = Export Image');
console.log('   Ctrl+P = Paste Document');
console.log('   Ctrl+Shift+C = Copy Caption');
</script>

</body>
</html>